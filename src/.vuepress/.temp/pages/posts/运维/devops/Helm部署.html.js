export const data = JSON.parse("{\"key\":\"v-a24d3496\",\"path\":\"/posts/%E8%BF%90%E7%BB%B4/devops/Helm%E9%83%A8%E7%BD%B2.html\",\"title\":\"Helm部署\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"Helm部署\",\"icon\":\"circle-info\",\"description\":\"Helm部署 Helm部署 1、搭建过程 搭建篇主要介绍Helm，chart仓库chartmuseum 等环境的搭建。 Helm主要分为服务端Tiller和客户端, 客户端负责Chart/Release应用创建和发布，服务端负责在K8S集群内运行创建容器等。 Helm搭建过程： 1. 从 https://github.com/helm/helm/releases 下载 helm-v3.12.2-linux-amd64.tar.gz 2. 解压 tar -zxvf helm-v3.12.2-linux-amd64.tar.gz 3. 移动 mv linux-amd64/helm /usr/local/bin/helm 查看版本: helm version 4. 仓库配置 //添加常用的 chart 仓库 helm repo add bitnami https://charts.bitnami.com/bitnami helm repo add aliyun https://kubernetes.oss-cn-hangzhou.aliyuncs.com/charts helm repo add incubator https://charts.helm.sh/incubator\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://github.com/chenweiquan-red/posts/%E8%BF%90%E7%BB%B4/devops/Helm%E9%83%A8%E7%BD%B2.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"WQ-知识库\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"Helm部署\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"Helm部署 Helm部署 1、搭建过程 搭建篇主要介绍Helm，chart仓库chartmuseum 等环境的搭建。 Helm主要分为服务端Tiller和客户端, 客户端负责Chart/Release应用创建和发布，服务端负责在K8S集群内运行创建容器等。 Helm搭建过程： 1. 从 https://github.com/helm/helm/releases 下载 helm-v3.12.2-linux-amd64.tar.gz 2. 解压 tar -zxvf helm-v3.12.2-linux-amd64.tar.gz 3. 移动 mv linux-amd64/helm /usr/local/bin/helm 查看版本: helm version 4. 仓库配置 //添加常用的 chart 仓库 helm repo add bitnami https://charts.bitnami.com/bitnami helm repo add aliyun https://kubernetes.oss-cn-hangzhou.aliyuncs.com/charts helm repo add incubator https://charts.helm.sh/incubator\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"Durant\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"Helm部署\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"Durant\\\",\\\"url\\\":\\\"https://www.wqknowledge.top/\\\"}]}\"]]},\"headers\":[{\"level\":3,\"title\":\"Helm部署\",\"slug\":\"helm部署-1\",\"link\":\"#helm部署-1\",\"children\":[]},{\"level\":3,\"title\":\"1、搭建过程\",\"slug\":\"_1、搭建过程\",\"link\":\"#_1、搭建过程\",\"children\":[]},{\"level\":3,\"title\":\"2、搭建chart仓库 Chartmuseum\",\"slug\":\"_2、搭建chart仓库-chartmuseum\",\"link\":\"#_2、搭建chart仓库-chartmuseum\",\"children\":[]},{\"level\":3,\"title\":\"3、Helm 是什么？Helm中的chart和release 是什么概念？\",\"slug\":\"_3、helm-是什么-helm中的chart和release-是什么概念\",\"link\":\"#_3、helm-是什么-helm中的chart和release-是什么概念\",\"children\":[]}],\"readingTime\":{\"minutes\":1.98,\"words\":594},\"filePathRelative\":\"posts/运维/devops/Helm部署.md\",\"excerpt\":\"<h1> Helm部署</h1>\\n<h3> Helm部署</h3>\\n<h3> 1、搭建过程</h3>\\n<p>搭建篇主要介绍Helm，chart仓库chartmuseum 等环境的搭建。 Helm主要分为服务端Tiller和客户端,<br>\\n客户端负责Chart/Release应用创建和发布，服务端负责在K8S集群内运行创建容器等。</p>\\n<p>Helm搭建过程：</p>\\n<div class=\\\"language-bash line-numbers-mode\\\" data-ext=\\\"sh\\\"><pre class=\\\"language-bash\\\"><code>  <span class=\\\"token number\\\">1</span>. 从 https://github.com/helm/helm/releases 下载 helm-v3.12.2-linux-amd64.tar.gz\\n\\n  <span class=\\\"token number\\\">2</span>. 解压\\n  <span class=\\\"token function\\\">tar</span> <span class=\\\"token parameter variable\\\">-zxvf</span> helm-v3.12.2-linux-amd64.tar.gz\\n    \\n  <span class=\\\"token number\\\">3</span>. 移动\\n    <span class=\\\"token function\\\">mv</span>  linux-amd64/helm  /usr/local/bin/helm \\n    \\n  查看版本: helm version\\n    \\n  <span class=\\\"token number\\\">4</span>. 仓库配置\\n    //添加常用的 chart 仓库\\n    helm repo <span class=\\\"token function\\\">add</span> bitnami https://charts.bitnami.com/bitnami\\n    helm repo <span class=\\\"token function\\\">add</span> aliyun https://kubernetes.oss-cn-hangzhou.aliyuncs.com/charts\\n    helm repo <span class=\\\"token function\\\">add</span> incubator https://charts.helm.sh/incubator \\n     \\n</code></pre><div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div>\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
