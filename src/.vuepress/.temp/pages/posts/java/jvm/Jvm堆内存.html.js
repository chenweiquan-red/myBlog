export const data = JSON.parse("{\"key\":\"v-1a9838da\",\"path\":\"/posts/java/jvm/Jvm%E5%A0%86%E5%86%85%E5%AD%98.html\",\"title\":\"Jvm堆内存\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"Jvm堆内存\",\"icon\":\"fire\",\"category\":[\"jvm\"],\"tag\":[\"Jvm堆内存\"],\"description\":\"1、Jvm堆内存 1.1、内存参数设置 jvm 内存主要是堆内存，存储对象。堆内存主要由新生代和老年代组成。 新生代：Eden, S0(from), S1(to) 老年代：Old/Tenured 新生代老年代默认比例：-XX：NewRatio = 2，表示新生代占1，老年代占2 新生代中E,S,S 大概比例为：6:1:1（不一定，会自动调整） 常用的JVM设置参数：Xms（初始）,Xmx（最大） 主要是指堆内存的空间。 一般初始：1/64物理内存 一般最大：1/4物理内存 注意：生产一般会设置成一样的，主要是缓解内存伸缩带来额外的开销。 Eden发生YoungGC、MinorGC, 第一次发生GC，对象由Eden回收，没有回收到的就移动到S0（对象计数1） 第二次发生GC，对象从Eden/S0移动到 S1，这时候S0、Eden没有数据，S1有数据（对象计数 + 1） 第三次发生GC，对象从S1移动到S0，计数+1 ... 次数达到15次就进入Old区 Old区满，发生FullGc FullGc后内存还是不够发生OOM\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://github.com/chenweiquan-red/posts/java/jvm/Jvm%E5%A0%86%E5%86%85%E5%AD%98.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"WQ-知识库\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"Jvm堆内存\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"1、Jvm堆内存 1.1、内存参数设置 jvm 内存主要是堆内存，存储对象。堆内存主要由新生代和老年代组成。 新生代：Eden, S0(from), S1(to) 老年代：Old/Tenured 新生代老年代默认比例：-XX：NewRatio = 2，表示新生代占1，老年代占2 新生代中E,S,S 大概比例为：6:1:1（不一定，会自动调整） 常用的JVM设置参数：Xms（初始）,Xmx（最大） 主要是指堆内存的空间。 一般初始：1/64物理内存 一般最大：1/4物理内存 注意：生产一般会设置成一样的，主要是缓解内存伸缩带来额外的开销。 Eden发生YoungGC、MinorGC, 第一次发生GC，对象由Eden回收，没有回收到的就移动到S0（对象计数1） 第二次发生GC，对象从Eden/S0移动到 S1，这时候S0、Eden没有数据，S1有数据（对象计数 + 1） 第三次发生GC，对象从S1移动到S0，计数+1 ... 次数达到15次就进入Old区 Old区满，发生FullGc FullGc后内存还是不够发生OOM\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"Durant\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"Jvm堆内存\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"Jvm堆内存\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"Durant\\\",\\\"url\\\":\\\"https://www.wqknowledge.top/\\\"}]}\"]]},\"headers\":[{\"level\":3,\"title\":\"1.1、内存参数设置\",\"slug\":\"_1-1、内存参数设置\",\"link\":\"#_1-1、内存参数设置\",\"children\":[]},{\"level\":3,\"title\":\"1.2、对象分配内存流程\",\"slug\":\"_1-2、对象分配内存流程\",\"link\":\"#_1-2、对象分配内存流程\",\"children\":[]}],\"readingTime\":{\"minutes\":1.46,\"words\":437},\"filePathRelative\":\"posts/java/jvm/Jvm堆内存.md\",\"excerpt\":\"<h1> 1、Jvm堆内存</h1>\\n<h3> 1.1、内存参数设置</h3>\\n<div class=\\\"language-text line-numbers-mode\\\" data-ext=\\\"text\\\"><pre class=\\\"language-text\\\"><code>jvm 内存主要是堆内存，存储对象。堆内存主要由新生代和老年代组成。\\n新生代：Eden, S0(from), S1(to)\\n老年代：Old/Tenured\\n\\n新生代老年代默认比例：-XX：NewRatio = 2，表示新生代占1，老年代占2\\n新生代中E,S,S 大概比例为：6:1:1（不一定，会自动调整）\\n\\n常用的JVM设置参数：Xms（初始）,Xmx（最大） 主要是指堆内存的空间。\\n一般初始：1/64物理内存\\n一般最大：1/4物理内存\\n注意：生产一般会设置成一样的，主要是缓解内存伸缩带来额外的开销。\\n\\n\\nEden发生YoungGC、MinorGC,\\n第一次发生GC，对象由Eden回收，没有回收到的就移动到S0（对象计数1）\\n\\n第二次发生GC，对象从Eden/S0移动到 S1，这时候S0、Eden没有数据，S1有数据（对象计数 + 1）\\n\\n第三次发生GC，对象从S1移动到S0，计数+1\\n\\n...\\n次数达到15次就进入Old区\\n\\nOld区满，发生FullGc\\n\\nFullGc后内存还是不够发生OOM\\n</code></pre><div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div>\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
