export const data = JSON.parse("{\"key\":\"v-2cdd8cba\",\"path\":\"/posts/java/jvm/jvm%E8%B0%83%E4%BC%98jstat.html\",\"title\":\"Jvm之jstat\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"Jvm之jstat\",\"icon\":\"fire\",\"category\":[\"jvm\"],\"tag\":[\"JVM 性能分析\"],\"description\":\"1、JVM调优，性能分析命令 1、jstat指令的命令格式为：jstat [options] pid [interval] [count] 选项 说明 -gc 统计垃圾回收的堆信息，单位为空间字节数，即单位为KB -gcutil 统计垃圾回收的堆信息，单位为空间的百分比 -class 统计类加载器的信息 -compile 统计编译行为信息 -gccapacity 统计不同区域（新生代、老年代、永久代）的堆容量信息 -gccause 统计引起垃圾回收的事件 -gcnew 统计垃圾回收时，新生代的情况 -gcnewcapacity 统计垃圾回收时，新生代堆空间容量 -gcold 统计垃圾回收时，老年代的情况 -gcoldcapacity 统计垃圾回收时，老年代堆空间容量 -gcpermcapacity 统计垃圾回收时，永久代的堆空间容量\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://mister-hope.github.io/posts/java/jvm/jvm%E8%B0%83%E4%BC%98jstat.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"博客演示\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"Jvm之jstat\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"1、JVM调优，性能分析命令 1、jstat指令的命令格式为：jstat [options] pid [interval] [count] 选项 说明 -gc 统计垃圾回收的堆信息，单位为空间字节数，即单位为KB -gcutil 统计垃圾回收的堆信息，单位为空间的百分比 -class 统计类加载器的信息 -compile 统计编译行为信息 -gccapacity 统计不同区域（新生代、老年代、永久代）的堆容量信息 -gccause 统计引起垃圾回收的事件 -gcnew 统计垃圾回收时，新生代的情况 -gcnewcapacity 统计垃圾回收时，新生代堆空间容量 -gcold 统计垃圾回收时，老年代的情况 -gcoldcapacity 统计垃圾回收时，老年代堆空间容量 -gcpermcapacity 统计垃圾回收时，永久代的堆空间容量\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"Mr.Hope\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"JVM 性能分析\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"Jvm之jstat\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"Mr.Hope\\\",\\\"url\\\":\\\"https://mister-hope.com\\\"}]}\"]]},\"headers\":[{\"level\":3,\"title\":\"1、JVM调优，性能分析命令\",\"slug\":\"_1、jvm调优-性能分析命令\",\"link\":\"#_1、jvm调优-性能分析命令\",\"children\":[]}],\"readingTime\":{\"minutes\":4.48,\"words\":1345},\"filePathRelative\":\"posts/java/jvm/jvm调优jstat.md\",\"excerpt\":\"<h3> 1、JVM调优，性能分析命令</h3>\\n<p>1、jstat指令的命令格式为：jstat [options] pid [interval] [count]</p>\\n<table>\\n<thead>\\n<tr>\\n<th>选项</th>\\n<th>说明</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>-gc</td>\\n<td>统计垃圾回收的堆信息，单位为空间字节数，即单位为KB</td>\\n</tr>\\n<tr>\\n<td>-gcutil</td>\\n<td>统计垃圾回收的堆信息，单位为空间的百分比</td>\\n</tr>\\n<tr>\\n<td>-class</td>\\n<td>统计类加载器的信息</td>\\n</tr>\\n<tr>\\n<td>-compile</td>\\n<td>统计编译行为信息</td>\\n</tr>\\n<tr>\\n<td>-gccapacity</td>\\n<td>统计不同区域（新生代、老年代、永久代）的堆容量信息</td>\\n</tr>\\n<tr>\\n<td>-gccause</td>\\n<td>统计引起垃圾回收的事件</td>\\n</tr>\\n<tr>\\n<td>-gcnew</td>\\n<td>统计垃圾回收时，新生代的情况</td>\\n</tr>\\n<tr>\\n<td>-gcnewcapacity</td>\\n<td>统计垃圾回收时，新生代堆空间容量</td>\\n</tr>\\n<tr>\\n<td>-gcold</td>\\n<td>统计垃圾回收时，老年代的情况</td>\\n</tr>\\n<tr>\\n<td>-gcoldcapacity</td>\\n<td>统计垃圾回收时，老年代堆空间容量</td>\\n</tr>\\n<tr>\\n<td>-gcpermcapacity</td>\\n<td>统计垃圾回收时，永久代的堆空间容量</td>\\n</tr>\\n</tbody>\\n</table>\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
